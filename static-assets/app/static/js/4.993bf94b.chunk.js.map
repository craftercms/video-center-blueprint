{"version":3,"sources":["components/Slide/Slide.js","components/Slider/Slider.js","containers/Home/Home.js"],"names":["Slide","clearInterval","this","interval","props","model","index","fieldId","slide","className","component","Link","to","url_s","style","backgroundImage","background_s","vod_s","title_t","logo_s","ReactHtmlParser","subtitle_s","Component","Slider","descriptorKey","Array","isArray","data","key","setState","getDescriptor","direction","slider","prev","next","onClick","changeSlide","icon","faAngleLeft","faAngleRight","descriptor","slides","slides_o","parseDescriptor","item","effect","ref","node","autoplay","map","i","length","renderSliderControls","descriptors","state","renderSlider","Home","setVideoDocked","descriptorUrl","isNullOrUndefined","setHeaderGhost","page","slider_o","categories","value","query","numResults","maxVideosDisplay_i","sort","by","order","type","maxChannelsDisplay_i","VideoCategories","renderHomeContent","connect","store","videoStatus","video","craftercms","entries","dispatch","docked","url","ghost"],"mappings":"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","file":"static/js/4.993bf94b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Field } from '@craftercms/experience-builder/react';\n\nclass Slide extends Component {\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { model, index, fieldId, slide } = this.props;\n\n    return (\n      <div className=\"discover-slider__inner\">\n        <Field\n          component={Link}\n          model={model}\n          fieldId={fieldId}\n          index={index}\n          className=\"discover-slider__link\"\n          to={slide.url_s}\n        >\n          <div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-mobile\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-desktop\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n          </div>\n          <div\n            className={`discover-slider__inner--content`}\n          >\n            {slide.vod_s &&\n            <div className=\"discover-slider__inner--vod\">\n              <Field\n                component=\"span\"\n                className=\"discover-slider__inner--vod-label\"\n                model={model}\n                index={index}\n                fieldId={`${fieldId}.vod_s`}\n              >\n                {slide.vod_s}\n              </Field>\n            </div>\n            }\n\n            <Field\n              component=\"h1\"\n              className=\"heading discover-slider__inner--title heading--medium heading--slider\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.title_t`}\n            >\n              {slide.title_t}\n            </Field>\n\n            {slide.logo_s &&\n            <div\n              className=\"discover-slider__inner--title discover-slider__inner--title--logo\"\n              style={{ backgroundImage: `url(\"${slide.logo_s}\")` }}\n            >\n            </div>\n            }\n\n            <Field\n              className=\"discover-slider__inner--subtitle\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.subtitle_s`}\n            >\n              {ReactHtmlParser(slide.subtitle_s)}\n            </Field>\n          </div>\n        </Field>\n      </div>\n    );\n  }\n}\n\nexport default Slide;\n","import React, { Component } from 'react';\nimport { Carousel } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport SliderHolder from './SliderStyle';\nimport Slide from '../Slide/Slide';\nimport { parseDescriptor } from '@craftercms/content';\n\nclass Slider extends Component {\n  componentDidMount() {\n    const data = Array.isArray(this.props.data) ? this.props.data : [this.props.data],\n      descriptorKey = data[0].key;    // data is the list of descriptors (only 1 for this component)\n                                      // Studio may return an array but studio's item selector is configured to be\n                                      // max 1 item. So it'll always be first item of array\n    this.setState({ descriptorKey });\n    this.props.getDescriptor(descriptorKey);\n  }\n\n  changeSlide(direction) {\n\n    if ('previous' === direction) {\n      this.slider.prev();\n    } else {\n      this.slider.next();\n    }\n  }\n\n  renderSliderControls() {\n    return (\n      <div className=\"discover-slider__inner--nav\">\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-prev\"\n          onClick={() => this.changeSlide('previous')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleLeft} />\n        </label>\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-next\"\n          onClick={() => this.changeSlide('next')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleRight} />\n        </label>\n      </div>\n    );\n  }\n\n  renderSlider(descriptor) {\n    var slides = descriptor.component.slides_o;\n    const model = parseDescriptor(descriptor);\n\n    if (!(slides.item instanceof Array)) {\n      slides = [slides.item];\n    } else {\n      slides = slides.item;\n    }\n\n    return (\n      <SliderHolder className=\"hero-container hero-container__ghost\">\n        <Carousel\n          className=\"discover-slider\"\n          effect=\"fade\"\n          ref={node => (this.slider = node)}\n          autoplay\n        >\n          {\n            slides.map((slide, i) => <Slide key={i} slide={slide} model={model} index={i} fieldId=\"slides_o\"/>)\n          }\n        </Carousel>\n\n        {slides.length > 1 &&\n        this.renderSliderControls()\n        }\n      </SliderHolder>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.descriptors && this.state && this.state.descriptorKey && this.props.descriptors[this.state.descriptorKey] &&\n        this.renderSlider(this.props.descriptors[this.state.descriptorKey])\n        }\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isNullOrUndefined } from 'util';\nimport { getDescriptor } from '@craftercms/redux';\nimport { setVideoDocked } from '../../actions/videoPlayerActions';\nimport { setHeaderGhost } from '../../actions/headerActions';\nimport Slider from '../../components/Slider/Slider.js';\nimport VideoCategories from '../../components/VideoCategories/VideoCategories.js';\n\nclass Home extends Component {\n  componentWillMount() {\n    this.props.setVideoDocked(false);\n\n    this.descriptorUrl = '/site/website/index.xml';\n\n    if (isNullOrUndefined(this.props.descriptors[this.descriptorUrl])) {\n      this.props.getDescriptor(this.descriptorUrl);\n    }\n  }\n\n  componentDidMount() {\n    this.props.setHeaderGhost(true);\n  }\n\n  componentWillUnmount() {\n    this.props.setHeaderGhost(false);\n  }\n\n  renderSlider(descriptor) {\n    if (descriptor.page.slider_o.item) {\n      return (\n        <Slider\n          data={descriptor.page.slider_o.item}\n          getDescriptor={this.props.getDescriptor}\n          descriptors={this.props.descriptors}\n        >\n        </Slider>\n      );\n    }\n  }\n\n  renderHomeContent(descriptor) {\n    var page = descriptor.page,\n      categories = [\n        {\n          key: 'featured-videos',\n          value: 'Featured Videos',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'bool': {\n                    'should': [\n                      {\n                        'match': {\n                          'content-type': '/component/youtube-video'\n                        }\n                      },\n                      {\n                        'match': {\n                          'content-type': '/component/video-on-demand'\n                        }\n                      }\n                    ],\n                  }\n                },\n                {\n                  'match': {\n                    'featured_b': true\n                  }\n                }\n              ]\n            }\n          },\n          numResults: page.maxVideosDisplay_i\n        },\n        {\n          key: 'latest-videos',\n          value: 'Latest Videos',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'bool': {\n                    'should': [\n                      {\n                        'match': {\n                          'content-type': '/component/youtube-video'\n                        }\n                      },\n                      {\n                        'match': {\n                          'content-type': '/component/video-on-demand'\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            },\n          },\n          sort: {\n            by: 'date_dt',\n            order: 'desc'\n          },\n          numResults: page.maxVideosDisplay_i\n        },\n        {\n          key: 'featured-channels',\n          value: 'Featured Channels',\n          type: 'channel-card-alt',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'match': {\n                    'content-type': '/component/component-channel'\n                  }\n                },\n                {\n                  'match': {\n                    'featured_b': true\n                  }\n                }\n              ]\n            }\n          },\n          numResults: page.maxChannelsDisplay_i\n        }\n      ];\n\n    return (\n      <div>\n        {this.renderSlider(descriptor)}\n\n        <VideoCategories categories={categories}>\n        </VideoCategories>\n      </div>\n    );\n  }\n\n  render() {\n    var { descriptors } = this.props;\n\n    return (\n      <div>\n        {descriptors && descriptors[this.descriptorUrl] &&\n        this.renderHomeContent(descriptors[this.descriptorUrl])\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    videoStatus: store.video.videoStatus,\n    descriptors: store.craftercms.descriptors.entries\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return ({\n    setVideoDocked: (docked) => {\n      dispatch(setVideoDocked(docked));\n    },\n    getDescriptor: (url) => {\n      dispatch(getDescriptor(url));\n    },\n    setHeaderGhost: (ghost) => {\n      dispatch(setHeaderGhost(ghost));\n    }\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"],"sourceRoot":""}