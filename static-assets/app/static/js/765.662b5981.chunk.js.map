{"version":3,"file":"static/js/765.662b5981.chunk.js","mappings":"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","sources":["components/Slide/Slide.js","components/Slider/Slider.js","containers/Home/Home.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Field } from '@craftercms/experience-builder/react';\n\nclass Slide extends Component {\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { model, index, fieldId, slide } = this.props;\n\n    return (\n      <div className=\"discover-slider__inner\">\n        <Field\n          component={Link}\n          model={model}\n          fieldId={fieldId}\n          index={index}\n          className=\"discover-slider__link\"\n          to={slide.url_s}\n        >\n          <div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-mobile\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-desktop\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n          </div>\n          <div\n            className={`discover-slider__inner--content`}\n          >\n            {slide.vod_s &&\n            <div className=\"discover-slider__inner--vod\">\n              <Field\n                component=\"span\"\n                className=\"discover-slider__inner--vod-label\"\n                model={model}\n                index={index}\n                fieldId={`${fieldId}.vod_s`}\n              >\n                {slide.vod_s}\n              </Field>\n            </div>\n            }\n\n            <Field\n              component=\"h1\"\n              className=\"heading discover-slider__inner--title heading--medium heading--slider\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.title_t`}\n            >\n              {slide.title_t}\n            </Field>\n\n            {slide.logo_s &&\n            <div\n              className=\"discover-slider__inner--title discover-slider__inner--title--logo\"\n              style={{ backgroundImage: `url(\"${slide.logo_s}\")` }}\n            >\n            </div>\n            }\n\n            <Field\n              className=\"discover-slider__inner--subtitle\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.subtitle_s`}\n            >\n              {ReactHtmlParser(slide.subtitle_s)}\n            </Field>\n          </div>\n        </Field>\n      </div>\n    );\n  }\n}\n\nexport default Slide;\n","import React, { Component } from 'react';\nimport { Carousel } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport SliderHolder from './SliderStyle';\nimport Slide from '../Slide/Slide';\nimport { parseDescriptor } from '@craftercms/content';\n\nclass Slider extends Component {\n  componentDidMount() {\n    const data = Array.isArray(this.props.data) ? this.props.data : [this.props.data],\n      descriptorKey = data[0].key;    // data is the list of descriptors (only 1 for this component)\n                                      // Studio may return an array but studio's item selector is configured to be\n                                      // max 1 item. So it'll always be first item of array\n    this.setState({ descriptorKey });\n    this.props.getDescriptor(descriptorKey);\n  }\n\n  changeSlide(direction) {\n\n    if ('previous' === direction) {\n      this.slider.prev();\n    } else {\n      this.slider.next();\n    }\n  }\n\n  renderSliderControls() {\n    return (\n      <div className=\"discover-slider__inner--nav\">\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-prev\"\n          onClick={() => this.changeSlide('previous')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleLeft} />\n        </label>\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-next\"\n          onClick={() => this.changeSlide('next')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleRight} />\n        </label>\n      </div>\n    );\n  }\n\n  renderSlider(descriptor) {\n    var slides = descriptor.component.slides_o;\n    const model = parseDescriptor(descriptor);\n\n    if (!(slides.item instanceof Array)) {\n      slides = [slides.item];\n    } else {\n      slides = slides.item;\n    }\n\n    return (\n      <SliderHolder className=\"hero-container hero-container__ghost\">\n        <Carousel\n          className=\"discover-slider\"\n          effect=\"fade\"\n          ref={node => (this.slider = node)}\n          autoplay\n        >\n          {\n            slides.map((slide, i) => <Slide key={i} slide={slide} model={model} index={i} fieldId=\"slides_o\"/>)\n          }\n        </Carousel>\n\n        {slides.length > 1 &&\n        this.renderSliderControls()\n        }\n      </SliderHolder>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.descriptors && this.state && this.state.descriptorKey && this.props.descriptors[this.state.descriptorKey] &&\n        this.renderSlider(this.props.descriptors[this.state.descriptorKey])\n        }\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isNullOrUndefined } from '../../utils';\nimport { getDescriptor } from '@craftercms/redux';\nimport { setVideoDocked } from '../../actions/videoPlayerActions';\nimport { setHeaderGhost } from '../../actions/headerActions';\nimport Slider from '../../components/Slider/Slider.js';\nimport VideoCategories from '../../components/VideoCategories/VideoCategories.js';\n\nclass Home extends Component {\n  componentWillMount() {\n    this.props.setVideoDocked(false);\n\n    this.descriptorUrl = '/site/website/index.xml';\n\n    if (isNullOrUndefined(this.props.descriptors[this.descriptorUrl])) {\n      this.props.getDescriptor(this.descriptorUrl);\n    }\n  }\n\n  componentDidMount() {\n    this.props.setHeaderGhost(true);\n  }\n\n  componentWillUnmount() {\n    this.props.setHeaderGhost(false);\n  }\n\n  renderSlider(descriptor) {\n    if (descriptor.page.slider_o.item) {\n      return (\n        <Slider\n          data={descriptor.page.slider_o.item}\n          getDescriptor={this.props.getDescriptor}\n          descriptors={this.props.descriptors}\n        >\n        </Slider>\n      );\n    }\n  }\n\n  renderHomeContent(descriptor) {\n    var page = descriptor.page,\n      categories = [\n        {\n          key: 'featured-videos',\n          value: 'Featured Videos',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'bool': {\n                    'should': [\n                      {\n                        'match': {\n                          'content-type': '/component/youtube-video'\n                        }\n                      },\n                      {\n                        'match': {\n                          'content-type': '/component/video-on-demand'\n                        }\n                      }\n                    ],\n                  }\n                },\n                {\n                  'match': {\n                    'featured_b': true\n                  }\n                }\n              ]\n            }\n          },\n          numResults: page.maxVideosDisplay_i\n        },\n        {\n          key: 'latest-videos',\n          value: 'Latest Videos',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'bool': {\n                    'should': [\n                      {\n                        'match': {\n                          'content-type': '/component/youtube-video'\n                        }\n                      },\n                      {\n                        'match': {\n                          'content-type': '/component/video-on-demand'\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            },\n          },\n          sort: {\n            by: 'date_dt',\n            order: 'desc'\n          },\n          numResults: page.maxVideosDisplay_i\n        },\n        {\n          key: 'featured-channels',\n          value: 'Featured Channels',\n          type: 'channel-card-alt',\n          query: {\n            'bool': {\n              'filter': [\n                {\n                  'match': {\n                    'content-type': '/component/component-channel'\n                  }\n                },\n                {\n                  'match': {\n                    'featured_b': true\n                  }\n                }\n              ]\n            }\n          },\n          numResults: page.maxChannelsDisplay_i\n        }\n      ];\n\n    return (\n      <div>\n        {this.renderSlider(descriptor)}\n\n        <VideoCategories categories={categories}>\n        </VideoCategories>\n      </div>\n    );\n  }\n\n  render() {\n    var { descriptors } = this.props;\n\n    return (\n      <div>\n        {descriptors && descriptors[this.descriptorUrl] &&\n        this.renderHomeContent(descriptors[this.descriptorUrl])\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    videoStatus: store.video.videoStatus,\n    descriptors: store.craftercms.descriptors.entries\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return ({\n    setVideoDocked: (docked) => {\n      dispatch(setVideoDocked(docked));\n    },\n    getDescriptor: (url) => {\n      dispatch(getDescriptor(url));\n    },\n    setHeaderGhost: (ghost) => {\n      dispatch(setHeaderGhost(ghost));\n    }\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"],"names":["Slide","Component","componentWillUnmount","clearInterval","this","interval","render","model","index","fieldId","slide","props","_jsx","className","children","_jsxs","Field","component","Link","to","url_s","style","backgroundImage","concat","background_s","vod_s","title_t","logo_s","ReactHtmlParser","subtitle_s","Slider","componentDidMount","descriptorKey","Array","isArray","data","key","setState","getDescriptor","changeSlide","direction","slider","prev","next","renderSliderControls","onClick","FontAwesomeIcon","icon","faAngleLeft","faAngleRight","renderSlider","descriptor","slides","slides_o","parseDescriptor","item","SliderHolder","Carousel","effect","ref","node","autoplay","map","i","length","descriptors","state","Home","componentWillMount","setVideoDocked","descriptorUrl","isNullOrUndefined","setHeaderGhost","page","slider_o","renderHomeContent","categories","value","query","numResults","maxVideosDisplay_i","sort","by","order","type","maxChannelsDisplay_i","VideoCategories","connect","store","videoStatus","video","craftercms","entries","dispatch","docked","url","ghost"],"sourceRoot":""}